// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package generated

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BlockHeaderMerklePartsData is an auto generated low-level Go binding around an user-defined struct.
type BlockHeaderMerklePartsData struct {
	VersionAndChainIdHash             [32]byte
	TimeHash                          [32]byte
	LastBlockIDAndOther               [32]byte
	NextValidatorHashAndConsensusHash [32]byte
	LastResultsHash                   [32]byte
	EvidenceAndProposerHash           [32]byte
}

// BridgeValidatorWithPower is an auto generated low-level Go binding around an user-defined struct.
type BridgeValidatorWithPower struct {
	Addr  common.Address
	Power *big.Int
}

// IAVLMerklePathData is an auto generated low-level Go binding around an user-defined struct.
type IAVLMerklePathData struct {
	IsDataOnRight  bool
	SubtreeHeight  uint8
	SubtreeSize    *big.Int
	SubtreeVersion *big.Int
	SiblingHash    [32]byte
}

// IBridgeRequestPacket is an auto generated low-level Go binding around an user-defined struct.
type IBridgeRequestPacket struct {
	ClientId       string
	OracleScriptId uint64
	Params         []byte
	AskCount       uint64
	MinCount       uint64
}

// IBridgeResponsePacket is an auto generated low-level Go binding around an user-defined struct.
type IBridgeResponsePacket struct {
	ClientId      string
	RequestId     uint64
	AnsCount      uint64
	RequestTime   uint64
	ResolveTime   uint64
	ResolveStatus uint8
	Result        []byte
}

// MultiStoreData is an auto generated low-level Go binding around an user-defined struct.
type MultiStoreData struct {
	AccToGovStoresMerkleHash          [32]byte
	MainAndMintStoresMerkleHash       [32]byte
	OracleIAVLStateHash               [32]byte
	ParamsStoresMerkleHash            [32]byte
	SlashingToUpgradeStoresMerkleHash [32]byte
}

// TMSignatureData is an auto generated low-level Go binding around an user-defined struct.
type TMSignatureData struct {
	R                [32]byte
	S                [32]byte
	V                uint8
	SignedDataPrefix []byte
	SignedDataSuffix []byte
}

// CacheBridgeABI is the input ABI used to generate the binding from.
const CacheBridgeABI = "[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"internalType\":\"structBridge.ValidatorWithPower[]\",\"name\":\"_validators\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"oracleScriptId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"askCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"minCount\",\"type\":\"uint64\"}],\"internalType\":\"structIBridge.RequestPacket\",\"name\":\"_request\",\"type\":\"tuple\"}],\"name\":\"getLatestResponse\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ansCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"requestTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"resolveTime\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"resolveStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"internalType\":\"structIBridge.ResponsePacket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"oracleStates\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"relayAndMultiVerify\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"oracleScriptId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"askCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"minCount\",\"type\":\"uint64\"}],\"internalType\":\"structIBridge.RequestPacket[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ansCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"requestTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"resolveTime\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"resolveStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"internalType\":\"structIBridge.ResponsePacket[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"relayAndVerify\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"oracleScriptId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"askCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"minCount\",\"type\":\"uint64\"}],\"internalType\":\"structIBridge.RequestPacket\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ansCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"requestTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"resolveTime\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"resolveStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"internalType\":\"structIBridge.ResponsePacket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"relayMulti\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"accToGovStoresMerkleHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mainAndMintStoresMerkleHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"oracleIAVLStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"paramsStoresMerkleHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slashingToUpgradeStoresMerkleHash\",\"type\":\"bytes32\"}],\"internalType\":\"structMultiStore.Data\",\"name\":\"_multiStore\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"versionAndChainIdHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"timeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lastBlockIDAndOther\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nextValidatorHashAndConsensusHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"lastResultsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"evidenceAndProposerHash\",\"type\":\"bytes32\"}],\"internalType\":\"structBlockHeaderMerkleParts.Data\",\"name\":\"_merkleParts\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signedDataPrefix\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signedDataSuffix\",\"type\":\"bytes\"}],\"internalType\":\"structTMSignature.Data[]\",\"name\":\"_signatures\",\"type\":\"tuple[]\"}],\"name\":\"relayOracleState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"requestsCache\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ansCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"requestTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"resolveTime\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"resolveStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValidatorPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"internalType\":\"structBridge.ValidatorWithPower[]\",\"name\":\"_validators\",\"type\":\"tuple[]\"}],\"name\":\"updateValidatorPowers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validatorPowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockHeight\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"oracleScriptId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"askCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"minCount\",\"type\":\"uint64\"}],\"internalType\":\"structIBridge.RequestPacket\",\"name\":\"_requestPacket\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ansCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"requestTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"resolveTime\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"resolveStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"internalType\":\"structIBridge.ResponsePacket\",\"name\":\"_responsePacket\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDataOnRight\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"subtreeHeight\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"subtreeSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subtreeVersion\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"siblingHash\",\"type\":\"bytes32\"}],\"internalType\":\"structIAVLMerklePath.Data[]\",\"name\":\"_merklePaths\",\"type\":\"tuple[]\"}],\"name\":\"verifyOracleData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"oracleScriptId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"askCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"minCount\",\"type\":\"uint64\"}],\"internalType\":\"structIBridge.RequestPacket\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"clientId\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"ansCount\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"requestTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"resolveTime\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"resolveStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"internalType\":\"structIBridge.ResponsePacket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// CacheBridgeBin is the compiled bytecode used for deploying new contracts.
var CacheBridgeBin = "0x60806040523480156200001157600080fd5b5060405162004e3238038062004e328339818101604052810190620000379190620003c5565b8060006200004a6200022760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060005b81518110156200021e57620000ff62000287565b8282815181106200010c57fe5b60200260200101519050600060026000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146200019f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019690620004d6565b60405180910390fd5b806020015160026000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200020b81602001516003546200022f60201b620016cb1790919060201c565b60038190555050806001019050620000eb565b505050620005d2565b600033905090565b6000808284019050838110156200027d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200027490620004b4565b60405180910390fd5b8091505092915050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600081519050620002c8816200059e565b92915050565b600082601f830112620002e057600080fd5b8151620002f7620002f18262000526565b620004f8565b915081818352602084019350602081019050838560408402820111156200031d57600080fd5b60005b838110156200035157816200033688826200035b565b84526020840193506040830192505060018101905062000320565b5050505092915050565b6000604082840312156200036e57600080fd5b6200037a6040620004f8565b905060006200038c84828501620002b7565b6000830152506020620003a284828501620003ae565b60208301525092915050565b600081519050620003bf81620005b8565b92915050565b600060208284031215620003d857600080fd5b600082015167ffffffffffffffff811115620003f357600080fd5b6200040184828501620002ce565b91505092915050565b600062000419601b836200054f565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006200045b6024836200054f565b91507f4455504c49434154494f4e5f494e5f494e495449414c5f56414c494441544f5260008301527f5f534554000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006020820190508181036000830152620004cf816200040a565b9050919050565b60006020820190508181036000830152620004f1816200044c565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200051c57600080fd5b8060405250919050565b600067ffffffffffffffff8211156200053e57600080fd5b602082029050602081019050919050565b600082825260208201905092915050565b60006200056d8262000574565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620005a98162000560565b8114620005b557600080fd5b50565b620005c38162000594565b8114620005cf57600080fd5b50565b61485080620005e26000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806391a6872311610097578063eb93052211610066578063eb9305221461028a578063f2fde38b146102bb578063f61aa09d146102d7578063f8156a6e14610307576100f5565b806391a68723146101dc5780639c90b177146101f8578063ad37373214610229578063c5f556f01461025a576100f5565b8063766e4e21116100d3578063766e4e21146101505780637c66ec801461016c5780638da5cb5b146101a25780638f0d6f17146101c0576100f5565b80631102965c146100fa5780635d9cfa201461012a578063715018a614610146575b600080fd5b610114600480360381019061010f9190613067565b610325565b6040516101219190614389565b60405180910390f35b610144600480360381019061013f919061313d565b6105e1565b005b61014e6107a2565b005b61016a60048036038101906101659190612f4a565b6108dc565b005b61018660048036038101906101819190612ef8565b6109c5565b60405161019997969594939291906140f3565b60405180910390f35b6101aa610b94565b6040516101b7919061401d565b60405180910390f35b6101da60048036038101906101d59190612f4a565b610bbd565b005b6101f660048036038101906101f19190612eb7565b610c73565b005b610212600480360381019061020d9190612f4a565b610df2565b604051610220929190614038565b60405180910390f35b610243600480360381019061023e9190612f4a565b6110e7565b604051610251929190614352565b60405180910390f35b610274600480360381019061026f9190613114565b6112dc565b604051610281919061406f565b60405180910390f35b6102a4600480360381019061029f91906131ba565b6112f4565b6040516102b2929190614352565b60405180910390f35b6102d560048036038101906102d09190612e22565b611504565b005b6102f160048036038101906102ec9190612e22565b6116ad565b6040516102fe91906143ab565b60405180910390f35b61030f6116c5565b60405161031c91906143ab565b60405180910390f35b61032d6120f6565b6103356120f6565b6004600061034285611720565b81526020019081526020016000206040518060e0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b505050505081526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160189054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016002820160009054906101000a900460ff1660ff1660ff168152602001600382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057b5780601f106105505761010080835404028352916020019161057b565b820191906000526020600020905b81548152906001019060200180831161055e57829003601f168201915b50505050508152505090506000816020015167ffffffffffffffff1614156105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf90614270565b60405180910390fd5b80915050919050565b60006105ec84611750565b905060006106058287866118949092919063ffffffff16565b905060008060005b855181101561071157600061063e8588848151811061062857fe5b602002602001015161193190919063ffffffff16565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16116106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a590614250565b60405180910390fd5b610700600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054846116cb90919063ffffffff16565b92508093505080600101905061060d565b506107286002600354611a1090919063ffffffff16565b61073c600383611a1090919063ffffffff16565b1161077c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610773906141f0565b60405180910390fd5b8660400151600160008a8152602001908152602001600020819055505050505050505050565b6107aa611a80565b73ffffffffffffffffffffffffffffffffffffffff166107c8610b94565b73ffffffffffffffffffffffffffffffffffffffff161461081e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610815906142b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060803073ffffffffffffffffffffffffffffffffffffffff16639c90b17785856040518363ffffffff1660e01b815260040161091a9291906140cf565b600060405180830381600087803b15801561093457600080fd5b505af1158015610948573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109719190612e4b565b9150915060005b82518110156109be576109b183828151811061099057fe5b60200260200101518383815181106109a457fe5b6020026020010151611a88565b8080600101915050610978565b5050505050565b6004602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a715780601f10610a4657610100808354040283529160200191610a71565b820191906000526020600020905b815481529060010190602001808311610a5457829003601f168201915b5050505050908060010160009054906101000a900467ffffffffffffffff16908060010160089054906101000a900467ffffffffffffffff16908060010160109054906101000a900467ffffffffffffffff16908060010160189054906101000a900467ffffffffffffffff16908060020160009054906101000a900460ff1690806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b8a5780601f10610b5f57610100808354040283529160200191610b8a565b820191906000526020600020905b815481529060010190602001808311610b6d57829003601f168201915b5050505050905087565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bc561215e565b610bcd6120f6565b3073ffffffffffffffffffffffffffffffffffffffff1663ad37373285856040518363ffffffff1660e01b8152600401610c089291906140cf565b600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610c5f91906130a8565b91509150610c6d8282611a88565b50505050565b610c7b611a80565b73ffffffffffffffffffffffffffffffffffffffff16610c99610b94565b73ffffffffffffffffffffffffffffffffffffffff1614610cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce6906142b0565b60405180910390fd5b60005b8151811015610dee57610d036121ab565b828281518110610d0f57fe5b60200260200101519050610d7160026000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600354611c9690919063ffffffff16565b600381905550806020015160026000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ddc81602001516003546116cb90919063ffffffff16565b60038190555050806001019050610cf2565b5050565b6060806060808585810190610e079190612f8f565b9150915060003073ffffffffffffffffffffffffffffffffffffffff16635d9cfa2060e01b84604051602001610e3e929190613cb3565b604051602081830303815290604052604051610e5a9190613cdb565b6000604051808303816000865af19150503d8060008114610e97576040519150601f19603f3d011682016040523d82523d6000602084013e610e9c565b606091505b5050905080610ee0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed7906142d0565b60405180910390fd5b6060825167ffffffffffffffff81118015610efa57600080fd5b50604051908082528060200260200182016040528015610f3457816020015b610f2161215e565b815260200190600190039081610f195790505b5090506060835167ffffffffffffffff81118015610f5157600080fd5b50604051908082528060200260200182016040528015610f8b57816020015b610f786120f6565b815260200190600190039081610f705790505b50905060005b84518110156110d457600060603073ffffffffffffffffffffffffffffffffffffffff1663eb93052260e01b888581518110610fc957fe5b6020026020010151604051602001610fe2929190613cb3565b604051602081830303815290604052604051610ffe9190613cdb565b600060405180830381855afa9150503d8060008114611039576040519150601f19603f3d011682016040523d82523d6000602084013e61103e565b606091505b509150915081611083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107a90614310565b60405180910390fd5b8080602001905181019061109791906130a8565b8685815181106110a357fe5b602002602001018686815181106110b657fe5b60200260200101829052829052505050508080600101915050610f91565b5081819650965050505050509250929050565b6110ef61215e565b6110f76120f6565b60608085858101906111099190612ffb565b9150915060003073ffffffffffffffffffffffffffffffffffffffff16635d9cfa2060e01b84604051602001611140929190613cb3565b60405160208183030381529060405260405161115c9190613cdb565b6000604051808303816000865af19150503d8060008114611199576040519150601f19603f3d011682016040523d82523d6000602084013e61119e565b606091505b50509050806111e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d9906142d0565b60405180910390fd5b600060603073ffffffffffffffffffffffffffffffffffffffff1663eb93052260e01b85604051602001611217929190613cb3565b6040516020818303038152906040526040516112339190613cdb565b600060405180830381855afa9150503d806000811461126e576040519150601f19603f3d011682016040523d82523d6000602084013e611273565b606091505b5091509150816112b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112af90614310565b60405180910390fd5b808060200190518101906112cc91906130a8565b9650965050505050509250929050565b60016020528060005260406000206000915090505481565b6112fc61215e565b6113046120f6565b6000600160008981526020019081526020016000205490506000801b811415611362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135990614190565b60405180910390fd5b61136a6121db565b61137386611ce6565b816000018190525060026113878989611cfb565b6040516113949190613cdb565b602060405180830381855afa1580156113b1573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906113d49190612f21565b81602001818152505060006002600060028460000151600960ff8d6020015160208960200151604051602001611411989796959493929190613f8f565b60405160208183030381529060405260405161142d9190613cdb565b602060405180830381855afa15801561144a573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061146d9190612f21565b905060005b86518110156114ae576114a18288838151811061148b57fe5b6020026020010151611d3790919063ffffffff16565b9150806001019050611472565b508281146114f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e890614170565b60405180910390fd5b8888945094505050509550959350505050565b61150c611a80565b73ffffffffffffffffffffffffffffffffffffffff1661152a610b94565b73ffffffffffffffffffffffffffffffffffffffff1614611580576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611577906142b0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e7906141b0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026020528060005260406000206000915090505481565b60035481565b600080828401905083811015611716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170d906141d0565b60405180910390fd5b8091505092915050565b6000816040516020016117339190614330565b604051602081830303815290604052805190602001209050919050565b600061188d611883836000015161187e856020015161187961186f6002808a604001516040516020016117839190613c98565b60405160208183030381529060405260405161179f9190613cdb565b602060405180830381855afa1580156117bc573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906117df9190612f21565b6040516020016117ef9190613c98565b60405160208183030381529060405260405161180b9190613cdb565b602060405180830381855afa158015611828573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061184b9190612f21565b60405160200161185b9190613d4b565b604051602081830303815290604052611e14565b8860600151611e8f565b611e8f565b611e8f565b8360800151611e8f565b9050919050565b60006119286118d16118c786600001516118c26118b86118b388611f0d565b611e14565b8960200151611e8f565b611e8f565b8660400151611e8f565b611923611919876060015161191461190a60208a6040516020016118f6929190613e85565b604051602081830303815290604052611e14565b8a60800151611e8f565b611e8f565b8760a00151611e8f565b611e8f565b90509392505050565b600060016002846060015184866080015160405160200161195493929190613cf2565b6040516020818303038152906040526040516119709190613cdb565b602060405180830381855afa15801561198d573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906119b09190612f21565b846040015185600001518660200151604051600081526020016040526040516119dc949392919061408a565b6020604051602081039080840390855afa1580156119fe573d6000803e3d6000fd5b50505060206040510351905092915050565b600080831415611a235760009050611a7a565b6000828402905082848281611a3457fe5b0414611a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6c90614290565b60405180910390fd5b809150505b92915050565b600033905090565b6000611a9383611720565b90506004600082815260200190815260200160002060010160189054906101000a900467ffffffffffffffff1667ffffffffffffffff16826080015167ffffffffffffffff1611611b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b1090614210565b60405180910390fd5b60018260a0015160ff1614611b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5a906142f0565b60405180910390fd5b81600460008381526020019081526020016000206000820151816000019080519060200190611b939291906121f8565b5060208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160010160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160010160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060a08201518160020160006101000a81548160ff021916908360ff16021790555060c0820151816003019080519060200190611c8d929190612278565b50905050505050565b600082821115611cdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cd290614230565b60405180910390fd5b818303905092915050565b6060611cf460028302611f0d565b9050919050565b6060611d0683612041565b611d0f83612094565b604051602001611d20929190613d27565b604051602081830303815290604052905092915050565b6000808360000151611d495782611d4f565b83608001515b905060008460000151611d66578460800151611d68565b835b905060026001866020015160ff16901b611d858760400151611ce6565b611d928860600151611ce6565b602086602087604051602001611dae9796959493929190613f16565b604051602081830303815290604052604051611dca9190613cdb565b602060405180830381855afa158015611de7573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611e0a9190612f21565b9250505092915050565b60006002600083604051602001611e2c929190613eee565b604051602081830303815290604052604051611e489190613cdb565b602060405180830381855afa158015611e65573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611e889190612f21565b9050919050565b6000600260018484604051602001611ea993929190613eb1565b604051602081830303815290604052604051611ec59190613cdb565b602060405180830381855afa158015611ee2573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611f059190612f21565b905092915050565b6060600082905060005b6000821115611f3257806001019050600782901c9150611f17565b60608167ffffffffffffffff81118015611f4b57600080fd5b506040519080825280601f01601f191660200182016040528015611f7e5781602001600182028036833780820191505090505b50905084925060005b82811015611fe657607f841660801760f81b828281518110611fa557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600784901c9350806001019050611f87565b50607f60f81b816001840381518110611ffb57fe5b6020010181815160f81c60f81b169150907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350809350505050919050565b60608160000151518260000151836020015184604001515185604001518660600151876080015160405160200161207e9796959493929190613d71565b6040516020818303038152906040529050919050565b6060816000015151826000015183602001518460400151856060015186608001518760a0015160ff168860c00151518960c001516040516020016120e099989796959493929190613dea565b6040516020818303038152906040529050919050565b6040518060e0016040528060608152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600060ff168152602001606081525090565b6040518060a0016040528060608152602001600067ffffffffffffffff16815260200160608152602001600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806040016040528060608152602001600080191681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061223957805160ff1916838001178555612267565b82800160010185558215612267579182015b8281111561226657825182559160200191906001019061224b565b5b50905061227491906122f8565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106122b957805160ff19168380011785556122e7565b828001600101855582156122e7579182015b828111156122e65782518255916020019190600101906122cb565b5b5090506122f491906122f8565b5090565b5b808211156123115760008160009055506001016122f9565b5090565b60008135905061232481614790565b92915050565b600082601f83011261233b57600080fd5b813561234e612349826143f3565b6143c6565b9150818183526020840193506020810190508360005b83811015612394578135860161237a8882612689565b845260208401935060208301925050600181019050612364565b5050505092915050565b600082601f8301126123af57600080fd5b81356123c26123bd8261441b565b6143c6565b915081818352602084019350602081019050838560a08402820111156123e757600080fd5b60005b8381101561241757816123fd8882612875565b845260208401935060a083019250506001810190506123ea565b5050505092915050565b600082601f83011261243257600080fd5b813561244561244082614443565b6143c6565b9150818183526020840193506020810190508360005b8381101561248b57813586016124718882612985565b84526020840193506020830192505060018101905061245b565b5050505092915050565b600082601f8301126124a657600080fd5b81516124b96124b48261446b565b6143c6565b9150818183526020840193506020810190508360005b838110156124ff57815186016124e58882612af5565b8452602084019350602083019250506001810190506124cf565b5050505092915050565b600082601f83011261251a57600080fd5b815161252d61252882614493565b6143c6565b9150818183526020840193506020810190508360005b8381101561257357815186016125598882612c8d565b845260208401935060208301925050600181019050612543565b5050505092915050565b600082601f83011261258e57600080fd5b81356125a161259c826144bb565b6143c6565b915081818352602084019350602081019050838560408402820111156125c657600080fd5b60005b838110156125f657816125dc8882612d6d565b8452602084019350604083019250506001810190506125c9565b5050505092915050565b60008135905061260f816147a7565b92915050565b600081359050612624816147be565b92915050565b600081519050612639816147be565b92915050565b60008083601f84011261265157600080fd5b8235905067ffffffffffffffff81111561266a57600080fd5b60208301915083600182028301111561268257600080fd5b9250929050565b600082601f83011261269a57600080fd5b81356126ad6126a8826144e3565b6143c6565b915080825260208301602083018583830111156126c957600080fd5b6126d48382846146cc565b50505092915050565b600082601f8301126126ee57600080fd5b81516127016126fc826144e3565b6143c6565b9150808252602083016020830185838301111561271d57600080fd5b6127288382846146db565b50505092915050565b600082601f83011261274257600080fd5b81356127556127508261450f565b6143c6565b9150808252602083016020830185838301111561277157600080fd5b61277c8382846146cc565b50505092915050565b600082601f83011261279657600080fd5b81516127a96127a48261450f565b6143c6565b915080825260208301602083018583830111156127c557600080fd5b6127d08382846146db565b50505092915050565b600060c082840312156127eb57600080fd5b6127f560c06143c6565b9050600061280584828501612615565b600083015250602061281984828501612615565b602083015250604061282d84828501612615565b604083015250606061284184828501612615565b606083015250608061285584828501612615565b60808301525060a061286984828501612615565b60a08301525092915050565b600060a0828403121561288757600080fd5b61289160a06143c6565b905060006128a184828501612600565b60008301525060206128b584828501612df8565b60208301525060406128c984828501612db9565b60408301525060606128dd84828501612db9565b60608301525060806128f184828501612615565b60808301525092915050565b600060a0828403121561290f57600080fd5b61291960a06143c6565b9050600061292984828501612615565b600083015250602061293d84828501612615565b602083015250604061295184828501612615565b604083015250606061296584828501612615565b606083015250608061297984828501612615565b60808301525092915050565b600060a0828403121561299757600080fd5b6129a160a06143c6565b905060006129b184828501612615565b60008301525060206129c584828501612615565b60208301525060406129d984828501612df8565b604083015250606082013567ffffffffffffffff8111156129f957600080fd5b612a0584828501612689565b606083015250608082013567ffffffffffffffff811115612a2557600080fd5b612a3184828501612689565b60808301525092915050565b600060a08284031215612a4f57600080fd5b612a5960a06143c6565b9050600082013567ffffffffffffffff811115612a7557600080fd5b612a8184828501612731565b6000830152506020612a9584828501612dce565b602083015250604082013567ffffffffffffffff811115612ab557600080fd5b612ac184828501612689565b6040830152506060612ad584828501612dce565b6060830152506080612ae984828501612dce565b60808301525092915050565b600060a08284031215612b0757600080fd5b612b1160a06143c6565b9050600082015167ffffffffffffffff811115612b2d57600080fd5b612b3984828501612785565b6000830152506020612b4d84828501612de3565b602083015250604082015167ffffffffffffffff811115612b6d57600080fd5b612b79848285016126dd565b6040830152506060612b8d84828501612de3565b6060830152506080612ba184828501612de3565b60808301525092915050565b600060e08284031215612bbf57600080fd5b612bc960e06143c6565b9050600082013567ffffffffffffffff811115612be557600080fd5b612bf184828501612731565b6000830152506020612c0584828501612dce565b6020830152506040612c1984828501612dce565b6040830152506060612c2d84828501612dce565b6060830152506080612c4184828501612dce565b60808301525060a0612c5584828501612df8565b60a08301525060c082013567ffffffffffffffff811115612c7557600080fd5b612c8184828501612689565b60c08301525092915050565b600060e08284031215612c9f57600080fd5b612ca960e06143c6565b9050600082015167ffffffffffffffff811115612cc557600080fd5b612cd184828501612785565b6000830152506020612ce584828501612de3565b6020830152506040612cf984828501612de3565b6040830152506060612d0d84828501612de3565b6060830152506080612d2184828501612de3565b60808301525060a0612d3584828501612e0d565b60a08301525060c082015167ffffffffffffffff811115612d5557600080fd5b612d61848285016126dd565b60c08301525092915050565b600060408284031215612d7f57600080fd5b612d8960406143c6565b90506000612d9984828501612315565b6000830152506020612dad84828501612db9565b60208301525092915050565b600081359050612dc8816147d5565b92915050565b600081359050612ddd816147ec565b92915050565b600081519050612df2816147ec565b92915050565b600081359050612e0781614803565b92915050565b600081519050612e1c81614803565b92915050565b600060208284031215612e3457600080fd5b6000612e4284828501612315565b91505092915050565b60008060408385031215612e5e57600080fd5b600083015167ffffffffffffffff811115612e7857600080fd5b612e8485828601612495565b925050602083015167ffffffffffffffff811115612ea157600080fd5b612ead85828601612509565b9150509250929050565b600060208284031215612ec957600080fd5b600082013567ffffffffffffffff811115612ee357600080fd5b612eef8482850161257d565b91505092915050565b600060208284031215612f0a57600080fd5b6000612f1884828501612615565b91505092915050565b600060208284031215612f3357600080fd5b6000612f418482850161262a565b91505092915050565b60008060208385031215612f5d57600080fd5b600083013567ffffffffffffffff811115612f7757600080fd5b612f838582860161263f565b92509250509250929050565b60008060408385031215612fa257600080fd5b600083013567ffffffffffffffff811115612fbc57600080fd5b612fc885828601612689565b925050602083013567ffffffffffffffff811115612fe557600080fd5b612ff18582860161232a565b9150509250929050565b6000806040838503121561300e57600080fd5b600083013567ffffffffffffffff81111561302857600080fd5b61303485828601612689565b925050602083013567ffffffffffffffff81111561305157600080fd5b61305d85828601612689565b9150509250929050565b60006020828403121561307957600080fd5b600082013567ffffffffffffffff81111561309357600080fd5b61309f84828501612a3d565b91505092915050565b600080604083850312156130bb57600080fd5b600083015167ffffffffffffffff8111156130d557600080fd5b6130e185828601612af5565b925050602083015167ffffffffffffffff8111156130fe57600080fd5b61310a85828601612c8d565b9150509250929050565b60006020828403121561312657600080fd5b600061313484828501612db9565b91505092915050565b6000806000806101a0858703121561315457600080fd5b600061316287828801612db9565b9450506020613173878288016128fd565b93505060c0613184878288016127d9565b92505061018085013567ffffffffffffffff8111156131a257600080fd5b6131ae87828801612421565b91505092959194509250565b600080600080600060a086880312156131d257600080fd5b60006131e088828901612db9565b955050602086013567ffffffffffffffff8111156131fd57600080fd5b61320988828901612a3d565b945050604086013567ffffffffffffffff81111561322657600080fd5b61323288828901612bad565b935050606061324388828901612db9565b925050608086013567ffffffffffffffff81111561326057600080fd5b61326c8882890161239e565b9150509295509295909350565b600061328583836139c8565b905092915050565b60006132998383613ac2565b905092915050565b6132aa8161461d565b82525050565b60006132bb8261455b565b6132c581856145a1565b9350836020820285016132d78561453b565b8060005b8581101561331357848403895281516132f48582613279565b94506132ff83614587565b925060208a019950506001810190506132db565b50829750879550505050505092915050565b600061333082614566565b61333a81856145b2565b93508360208202850161334c8561454b565b8060005b858110156133885784840389528151613369858261328d565b945061337483614594565b925060208a01995050600181019050613350565b50829750879550505050505092915050565b6133a38161463b565b82525050565b6133ba6133b58261463b565b61470e565b82525050565b6133d16133cc82614645565b614718565b82525050565b60006133e383856145d4565b93506133f08385846146cc565b6133f983614758565b840190509392505050565b600061340f82614571565b61341981856145c3565b93506134298185602086016146db565b61343281614758565b840191505092915050565b600061344882614571565b61345281856145d4565b93506134628185602086016146db565b61346b81614758565b840191505092915050565b600061348182614571565b61348b81856145e5565b935061349b8185602086016146db565b80840191505092915050565b60006134b28261457c565b6134bc81856145f0565b93506134cc8185602086016146db565b6134d581614758565b840191505092915050565b60006134eb8261457c565b6134f58185614601565b93506135058185602086016146db565b61350e81614758565b840191505092915050565b60006135248261457c565b61352e8185614612565b935061353e8185602086016146db565b80840191505092915050565b6000613557601983614601565b91507f494e56414c49445f4f5241434c455f444154415f50524f4f46000000000000006000830152602082019050919050565b6000613597601983614601565b91507f4e4f5f4f5241434c455f524f4f545f53544154455f44415441000000000000006000830152602082019050919050565b60006135d7600883614612565b91507f066f7261636c65200000000000000000000000000000000000000000000000006000830152600882019050919050565b6000613617602683614601565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061367d601b83614601565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b60006136bd602183614601565b91507f494e53554646494349454e545f56414c494441544f525f5349474e415455524560008301527f53000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613723602483614601565b91507f4641494c5f4c41544553545f524551554553545f53484f554c445f42455f4e4560008301527f57455354000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613789601e83614601565b91507f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006000830152602082019050919050565b60006137c9601e83614601565b91507f494e56414c49445f5349474e41545552455f5349474e45525f4f5244455200006000830152602082019050919050565b6000613809601283614601565b91507f524553504f4e53455f4e4f545f464f554e4400000000000000000000000000006000830152602082019050919050565b6000613849602183614601565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006138af602083614601565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006138ef601983614601565b91507f52454c41595f4f5241434c455f53544154455f4641494c4544000000000000006000830152602082019050919050565b600061392f602983614601565b91507f4641494c5f524551554553545f49535f4e4f545f5355434345535346554c4c5960008301527f5f5245534f4c56454400000000000000000000000000000000000000000000006020830152604082019050919050565b6000613995601983614601565b91507f5645524946595f4f5241434c455f444154415f4641494c4544000000000000006000830152602082019050919050565b600060a08301600083015184820360008601526139e582826134a7565b91505060208301516139fa6020860182613c2e565b5060408301518482036040860152613a128282613404565b9150506060830151613a276060860182613c2e565b506080830151613a3a6080860182613c2e565b508091505092915050565b600060a0830160008301518482036000860152613a6282826134a7565b9150506020830151613a776020860182613c2e565b5060408301518482036040860152613a8f8282613404565b9150506060830151613aa46060860182613c2e565b506080830151613ab76080860182613c2e565b508091505092915050565b600060e0830160008301518482036000860152613adf82826134a7565b9150506020830151613af46020860182613c2e565b506040830151613b076040860182613c2e565b506060830151613b1a6060860182613c2e565b506080830151613b2d6080860182613c2e565b5060a0830151613b4060a0860182613c63565b5060c083015184820360c0860152613b588282613404565b9150508091505092915050565b600060e0830160008301518482036000860152613b8282826134a7565b9150506020830151613b976020860182613c2e565b506040830151613baa6040860182613c2e565b506060830151613bbd6060860182613c2e565b506080830151613bd06080860182613c2e565b5060a0830151613be360a0860182613c63565b5060c083015184820360c0860152613bfb8282613404565b9150508091505092915050565b613c1181614691565b82525050565b613c28613c238261469b565b614722565b82525050565b613c37816146ab565b82525050565b613c46816146ab565b82525050565b613c5d613c58826146ab565b614734565b82525050565b613c6c816146bf565b82525050565b613c7b816146bf565b82525050565b613c92613c8d826146bf565b614746565b82525050565b6000613ca482846133a9565b60208201915081905092915050565b6000613cbf82856133c0565b600482019150613ccf8284613476565b91508190509392505050565b6000613ce78284613476565b915081905092915050565b6000613cfe8286613476565b9150613d0a82856133a9565b602082019150613d1a8284613476565b9150819050949350505050565b6000613d338285613476565b9150613d3f8284613476565b91508190509392505050565b6000613d56826135ca565b9150613d6282846133a9565b60208201915081905092915050565b6000613d7d828a613c17565b600482019150613d8d8289613519565b9150613d998288613c4c565b600882019150613da98287613c17565b600482019150613db98286613476565b9150613dc58285613c4c565b600882019150613dd58284613c4c565b60088201915081905098975050505050505050565b6000613df6828c613c17565b600482019150613e06828b613519565b9150613e12828a613c4c565b600882019150613e228289613c4c565b600882019150613e328288613c4c565b600882019150613e428287613c4c565b600882019150613e528286613c17565b600482019150613e628285613c17565b600482019150613e728284613476565b91508190509a9950505050505050505050565b6000613e918285613c81565b600182019150613ea182846133a9565b6020820191508190509392505050565b6000613ebd8286613c81565b600182019150613ecd82856133a9565b602082019150613edd82846133a9565b602082019150819050949350505050565b6000613efa8285613c81565b600182019150613f0a8284613476565b91508190509392505050565b6000613f22828a613c81565b600182019150613f328289613476565b9150613f3e8288613476565b9150613f4a8287613c81565b600182019150613f5a82866133a9565b602082019150613f6a8285613c81565b600182019150613f7a82846133a9565b60208201915081905098975050505050505050565b6000613f9b828b613c81565b600182019150613fab828a613c81565b600182019150613fbb8289613476565b9150613fc78288613c81565b600182019150613fd78287613c81565b600182019150613fe78286613c4c565b600882019150613ff78285613c81565b60018201915061400782846133a9565b6020820191508190509998505050505050505050565b600060208201905061403260008301846132a1565b92915050565b6000604082019050818103600083015261405281856132b0565b905081810360208301526140668184613325565b90509392505050565b6000602082019050614084600083018461339a565b92915050565b600060808201905061409f600083018761339a565b6140ac6020830186613c72565b6140b9604083018561339a565b6140c6606083018461339a565b95945050505050565b600060208201905081810360008301526140ea8184866133d7565b90509392505050565b600060e082019050818103600083015261410d818a6134e0565b905061411c6020830189613c3d565b6141296040830188613c3d565b6141366060830187613c3d565b6141436080830186613c3d565b61415060a0830185613c72565b81810360c0830152614162818461343d565b905098975050505050505050565b600060208201905081810360008301526141898161354a565b9050919050565b600060208201905081810360008301526141a98161358a565b9050919050565b600060208201905081810360008301526141c98161360a565b9050919050565b600060208201905081810360008301526141e981613670565b9050919050565b60006020820190508181036000830152614209816136b0565b9050919050565b6000602082019050818103600083015261422981613716565b9050919050565b600060208201905081810360008301526142498161377c565b9050919050565b60006020820190508181036000830152614269816137bc565b9050919050565b60006020820190508181036000830152614289816137fc565b9050919050565b600060208201905081810360008301526142a98161383c565b9050919050565b600060208201905081810360008301526142c9816138a2565b9050919050565b600060208201905081810360008301526142e9816138e2565b9050919050565b6000602082019050818103600083015261430981613922565b9050919050565b6000602082019050818103600083015261432981613988565b9050919050565b6000602082019050818103600083015261434a8184613a45565b905092915050565b6000604082019050818103600083015261436c8185613a45565b905081810360208301526143808184613b65565b90509392505050565b600060208201905081810360008301526143a38184613b65565b905092915050565b60006020820190506143c06000830184613c08565b92915050565b6000604051905081810181811067ffffffffffffffff821117156143e957600080fd5b8060405250919050565b600067ffffffffffffffff82111561440a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561443257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561445a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561448257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156144aa57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156144d257600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156144fa57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561452657600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061462882614671565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156146f95780820151818401526020810190506146de565b83811115614708576000848401525b50505050565b6000819050919050565b6000819050919050565b600061472d82614776565b9050919050565b600061473f82614769565b9050919050565b600061475182614783565b9050919050565b6000601f19601f8301169050919050565b60008160c01b9050919050565b60008160e01b9050919050565b60008160f81b9050919050565b6147998161461d565b81146147a457600080fd5b50565b6147b08161462f565b81146147bb57600080fd5b50565b6147c78161463b565b81146147d257600080fd5b50565b6147de81614691565b81146147e957600080fd5b50565b6147f5816146ab565b811461480057600080fd5b50565b61480c816146bf565b811461481757600080fd5b5056fea2646970667358221220281b44f2c44d77f113ff63c228e71f95adfcf238687aa3b1ae464d2c5df9612a64736f6c63430007000033"

// DeployCacheBridge deploys a new Ethereum contract, binding an instance of CacheBridge to it.
func DeployCacheBridge(auth *bind.TransactOpts, backend bind.ContractBackend, _validators []BridgeValidatorWithPower) (common.Address, *types.Transaction, *CacheBridge, error) {
	parsed, err := abi.JSON(strings.NewReader(CacheBridgeABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(CacheBridgeBin), backend, _validators)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &CacheBridge{CacheBridgeCaller: CacheBridgeCaller{contract: contract}, CacheBridgeTransactor: CacheBridgeTransactor{contract: contract}, CacheBridgeFilterer: CacheBridgeFilterer{contract: contract}}, nil
}

// CacheBridge is an auto generated Go binding around an Ethereum contract.
type CacheBridge struct {
	CacheBridgeCaller     // Read-only binding to the contract
	CacheBridgeTransactor // Write-only binding to the contract
	CacheBridgeFilterer   // Log filterer for contract events
}

// CacheBridgeCaller is an auto generated read-only Go binding around an Ethereum contract.
type CacheBridgeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CacheBridgeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type CacheBridgeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CacheBridgeFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type CacheBridgeFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CacheBridgeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type CacheBridgeSession struct {
	Contract     *CacheBridge      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// CacheBridgeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type CacheBridgeCallerSession struct {
	Contract *CacheBridgeCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// CacheBridgeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type CacheBridgeTransactorSession struct {
	Contract     *CacheBridgeTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// CacheBridgeRaw is an auto generated low-level Go binding around an Ethereum contract.
type CacheBridgeRaw struct {
	Contract *CacheBridge // Generic contract binding to access the raw methods on
}

// CacheBridgeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type CacheBridgeCallerRaw struct {
	Contract *CacheBridgeCaller // Generic read-only contract binding to access the raw methods on
}

// CacheBridgeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type CacheBridgeTransactorRaw struct {
	Contract *CacheBridgeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCacheBridge creates a new instance of CacheBridge, bound to a specific deployed contract.
func NewCacheBridge(address common.Address, backend bind.ContractBackend) (*CacheBridge, error) {
	contract, err := bindCacheBridge(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &CacheBridge{CacheBridgeCaller: CacheBridgeCaller{contract: contract}, CacheBridgeTransactor: CacheBridgeTransactor{contract: contract}, CacheBridgeFilterer: CacheBridgeFilterer{contract: contract}}, nil
}

// NewCacheBridgeCaller creates a new read-only instance of CacheBridge, bound to a specific deployed contract.
func NewCacheBridgeCaller(address common.Address, caller bind.ContractCaller) (*CacheBridgeCaller, error) {
	contract, err := bindCacheBridge(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &CacheBridgeCaller{contract: contract}, nil
}

// NewCacheBridgeTransactor creates a new write-only instance of CacheBridge, bound to a specific deployed contract.
func NewCacheBridgeTransactor(address common.Address, transactor bind.ContractTransactor) (*CacheBridgeTransactor, error) {
	contract, err := bindCacheBridge(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &CacheBridgeTransactor{contract: contract}, nil
}

// NewCacheBridgeFilterer creates a new log filterer instance of CacheBridge, bound to a specific deployed contract.
func NewCacheBridgeFilterer(address common.Address, filterer bind.ContractFilterer) (*CacheBridgeFilterer, error) {
	contract, err := bindCacheBridge(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &CacheBridgeFilterer{contract: contract}, nil
}

// bindCacheBridge binds a generic wrapper to an already deployed contract.
func bindCacheBridge(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(CacheBridgeABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CacheBridge *CacheBridgeRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _CacheBridge.Contract.CacheBridgeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CacheBridge *CacheBridgeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CacheBridge.Contract.CacheBridgeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CacheBridge *CacheBridgeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CacheBridge.Contract.CacheBridgeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CacheBridge *CacheBridgeCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _CacheBridge.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CacheBridge *CacheBridgeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CacheBridge.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CacheBridge *CacheBridgeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CacheBridge.Contract.contract.Transact(opts, method, params...)
}

// GetLatestResponse is a free data retrieval call binding the contract method 0x1102965c.
//
// Solidity: function getLatestResponse((string,uint64,bytes,uint64,uint64) _request) view returns((string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeCaller) GetLatestResponse(opts *bind.CallOpts, _request IBridgeRequestPacket) (IBridgeResponsePacket, error) {
	var out []interface{}
	err := _CacheBridge.contract.Call(opts, &out, "getLatestResponse", _request)

	if err != nil {
		return *new(IBridgeResponsePacket), err
	}

	out0 := *abi.ConvertType(out[0], new(IBridgeResponsePacket)).(*IBridgeResponsePacket)

	return out0, err

}

// GetLatestResponse is a free data retrieval call binding the contract method 0x1102965c.
//
// Solidity: function getLatestResponse((string,uint64,bytes,uint64,uint64) _request) view returns((string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeSession) GetLatestResponse(_request IBridgeRequestPacket) (IBridgeResponsePacket, error) {
	return _CacheBridge.Contract.GetLatestResponse(&_CacheBridge.CallOpts, _request)
}

// GetLatestResponse is a free data retrieval call binding the contract method 0x1102965c.
//
// Solidity: function getLatestResponse((string,uint64,bytes,uint64,uint64) _request) view returns((string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeCallerSession) GetLatestResponse(_request IBridgeRequestPacket) (IBridgeResponsePacket, error) {
	return _CacheBridge.Contract.GetLatestResponse(&_CacheBridge.CallOpts, _request)
}

// OracleStates is a free data retrieval call binding the contract method 0xc5f556f0.
//
// Solidity: function oracleStates(uint256 ) view returns(bytes32)
func (_CacheBridge *CacheBridgeCaller) OracleStates(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _CacheBridge.contract.Call(opts, &out, "oracleStates", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// OracleStates is a free data retrieval call binding the contract method 0xc5f556f0.
//
// Solidity: function oracleStates(uint256 ) view returns(bytes32)
func (_CacheBridge *CacheBridgeSession) OracleStates(arg0 *big.Int) ([32]byte, error) {
	return _CacheBridge.Contract.OracleStates(&_CacheBridge.CallOpts, arg0)
}

// OracleStates is a free data retrieval call binding the contract method 0xc5f556f0.
//
// Solidity: function oracleStates(uint256 ) view returns(bytes32)
func (_CacheBridge *CacheBridgeCallerSession) OracleStates(arg0 *big.Int) ([32]byte, error) {
	return _CacheBridge.Contract.OracleStates(&_CacheBridge.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_CacheBridge *CacheBridgeCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _CacheBridge.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_CacheBridge *CacheBridgeSession) Owner() (common.Address, error) {
	return _CacheBridge.Contract.Owner(&_CacheBridge.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_CacheBridge *CacheBridgeCallerSession) Owner() (common.Address, error) {
	return _CacheBridge.Contract.Owner(&_CacheBridge.CallOpts)
}

// RequestsCache is a free data retrieval call binding the contract method 0x7c66ec80.
//
// Solidity: function requestsCache(bytes32 ) view returns(string clientId, uint64 requestId, uint64 ansCount, uint64 requestTime, uint64 resolveTime, uint8 resolveStatus, bytes result)
func (_CacheBridge *CacheBridgeCaller) RequestsCache(opts *bind.CallOpts, arg0 [32]byte) (struct {
	ClientId      string
	RequestId     uint64
	AnsCount      uint64
	RequestTime   uint64
	ResolveTime   uint64
	ResolveStatus uint8
	Result        []byte
}, error) {
	var out []interface{}
	err := _CacheBridge.contract.Call(opts, &out, "requestsCache", arg0)

	outstruct := new(struct {
		ClientId      string
		RequestId     uint64
		AnsCount      uint64
		RequestTime   uint64
		ResolveTime   uint64
		ResolveStatus uint8
		Result        []byte
	})

	outstruct.ClientId = out[0].(string)
	outstruct.RequestId = out[1].(uint64)
	outstruct.AnsCount = out[2].(uint64)
	outstruct.RequestTime = out[3].(uint64)
	outstruct.ResolveTime = out[4].(uint64)
	outstruct.ResolveStatus = out[5].(uint8)
	outstruct.Result = out[6].([]byte)

	return *outstruct, err

}

// RequestsCache is a free data retrieval call binding the contract method 0x7c66ec80.
//
// Solidity: function requestsCache(bytes32 ) view returns(string clientId, uint64 requestId, uint64 ansCount, uint64 requestTime, uint64 resolveTime, uint8 resolveStatus, bytes result)
func (_CacheBridge *CacheBridgeSession) RequestsCache(arg0 [32]byte) (struct {
	ClientId      string
	RequestId     uint64
	AnsCount      uint64
	RequestTime   uint64
	ResolveTime   uint64
	ResolveStatus uint8
	Result        []byte
}, error) {
	return _CacheBridge.Contract.RequestsCache(&_CacheBridge.CallOpts, arg0)
}

// RequestsCache is a free data retrieval call binding the contract method 0x7c66ec80.
//
// Solidity: function requestsCache(bytes32 ) view returns(string clientId, uint64 requestId, uint64 ansCount, uint64 requestTime, uint64 resolveTime, uint8 resolveStatus, bytes result)
func (_CacheBridge *CacheBridgeCallerSession) RequestsCache(arg0 [32]byte) (struct {
	ClientId      string
	RequestId     uint64
	AnsCount      uint64
	RequestTime   uint64
	ResolveTime   uint64
	ResolveStatus uint8
	Result        []byte
}, error) {
	return _CacheBridge.Contract.RequestsCache(&_CacheBridge.CallOpts, arg0)
}

// TotalValidatorPower is a free data retrieval call binding the contract method 0xf8156a6e.
//
// Solidity: function totalValidatorPower() view returns(uint256)
func (_CacheBridge *CacheBridgeCaller) TotalValidatorPower(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _CacheBridge.contract.Call(opts, &out, "totalValidatorPower")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalValidatorPower is a free data retrieval call binding the contract method 0xf8156a6e.
//
// Solidity: function totalValidatorPower() view returns(uint256)
func (_CacheBridge *CacheBridgeSession) TotalValidatorPower() (*big.Int, error) {
	return _CacheBridge.Contract.TotalValidatorPower(&_CacheBridge.CallOpts)
}

// TotalValidatorPower is a free data retrieval call binding the contract method 0xf8156a6e.
//
// Solidity: function totalValidatorPower() view returns(uint256)
func (_CacheBridge *CacheBridgeCallerSession) TotalValidatorPower() (*big.Int, error) {
	return _CacheBridge.Contract.TotalValidatorPower(&_CacheBridge.CallOpts)
}

// ValidatorPowers is a free data retrieval call binding the contract method 0xf61aa09d.
//
// Solidity: function validatorPowers(address ) view returns(uint256)
func (_CacheBridge *CacheBridgeCaller) ValidatorPowers(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _CacheBridge.contract.Call(opts, &out, "validatorPowers", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ValidatorPowers is a free data retrieval call binding the contract method 0xf61aa09d.
//
// Solidity: function validatorPowers(address ) view returns(uint256)
func (_CacheBridge *CacheBridgeSession) ValidatorPowers(arg0 common.Address) (*big.Int, error) {
	return _CacheBridge.Contract.ValidatorPowers(&_CacheBridge.CallOpts, arg0)
}

// ValidatorPowers is a free data retrieval call binding the contract method 0xf61aa09d.
//
// Solidity: function validatorPowers(address ) view returns(uint256)
func (_CacheBridge *CacheBridgeCallerSession) ValidatorPowers(arg0 common.Address) (*big.Int, error) {
	return _CacheBridge.Contract.ValidatorPowers(&_CacheBridge.CallOpts, arg0)
}

// VerifyOracleData is a free data retrieval call binding the contract method 0xeb930522.
//
// Solidity: function verifyOracleData(uint256 _blockHeight, (string,uint64,bytes,uint64,uint64) _requestPacket, (string,uint64,uint64,uint64,uint64,uint8,bytes) _responsePacket, uint256 _version, (bool,uint8,uint256,uint256,bytes32)[] _merklePaths) view returns((string,uint64,bytes,uint64,uint64), (string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeCaller) VerifyOracleData(opts *bind.CallOpts, _blockHeight *big.Int, _requestPacket IBridgeRequestPacket, _responsePacket IBridgeResponsePacket, _version *big.Int, _merklePaths []IAVLMerklePathData) (IBridgeRequestPacket, IBridgeResponsePacket, error) {
	var out []interface{}
	err := _CacheBridge.contract.Call(opts, &out, "verifyOracleData", _blockHeight, _requestPacket, _responsePacket, _version, _merklePaths)

	if err != nil {
		return *new(IBridgeRequestPacket), *new(IBridgeResponsePacket), err
	}

	out0 := *abi.ConvertType(out[0], new(IBridgeRequestPacket)).(*IBridgeRequestPacket)
	out1 := *abi.ConvertType(out[1], new(IBridgeResponsePacket)).(*IBridgeResponsePacket)

	return out0, out1, err

}

// VerifyOracleData is a free data retrieval call binding the contract method 0xeb930522.
//
// Solidity: function verifyOracleData(uint256 _blockHeight, (string,uint64,bytes,uint64,uint64) _requestPacket, (string,uint64,uint64,uint64,uint64,uint8,bytes) _responsePacket, uint256 _version, (bool,uint8,uint256,uint256,bytes32)[] _merklePaths) view returns((string,uint64,bytes,uint64,uint64), (string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeSession) VerifyOracleData(_blockHeight *big.Int, _requestPacket IBridgeRequestPacket, _responsePacket IBridgeResponsePacket, _version *big.Int, _merklePaths []IAVLMerklePathData) (IBridgeRequestPacket, IBridgeResponsePacket, error) {
	return _CacheBridge.Contract.VerifyOracleData(&_CacheBridge.CallOpts, _blockHeight, _requestPacket, _responsePacket, _version, _merklePaths)
}

// VerifyOracleData is a free data retrieval call binding the contract method 0xeb930522.
//
// Solidity: function verifyOracleData(uint256 _blockHeight, (string,uint64,bytes,uint64,uint64) _requestPacket, (string,uint64,uint64,uint64,uint64,uint8,bytes) _responsePacket, uint256 _version, (bool,uint8,uint256,uint256,bytes32)[] _merklePaths) view returns((string,uint64,bytes,uint64,uint64), (string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeCallerSession) VerifyOracleData(_blockHeight *big.Int, _requestPacket IBridgeRequestPacket, _responsePacket IBridgeResponsePacket, _version *big.Int, _merklePaths []IAVLMerklePathData) (IBridgeRequestPacket, IBridgeResponsePacket, error) {
	return _CacheBridge.Contract.VerifyOracleData(&_CacheBridge.CallOpts, _blockHeight, _requestPacket, _responsePacket, _version, _merklePaths)
}

// Relay is a paid mutator transaction binding the contract method 0x8f0d6f17.
//
// Solidity: function relay(bytes _data) returns()
func (_CacheBridge *CacheBridgeTransactor) Relay(opts *bind.TransactOpts, _data []byte) (*types.Transaction, error) {
	return _CacheBridge.contract.Transact(opts, "relay", _data)
}

// Relay is a paid mutator transaction binding the contract method 0x8f0d6f17.
//
// Solidity: function relay(bytes _data) returns()
func (_CacheBridge *CacheBridgeSession) Relay(_data []byte) (*types.Transaction, error) {
	return _CacheBridge.Contract.Relay(&_CacheBridge.TransactOpts, _data)
}

// Relay is a paid mutator transaction binding the contract method 0x8f0d6f17.
//
// Solidity: function relay(bytes _data) returns()
func (_CacheBridge *CacheBridgeTransactorSession) Relay(_data []byte) (*types.Transaction, error) {
	return _CacheBridge.Contract.Relay(&_CacheBridge.TransactOpts, _data)
}

// RelayAndMultiVerify is a paid mutator transaction binding the contract method 0x9c90b177.
//
// Solidity: function relayAndMultiVerify(bytes _data) returns((string,uint64,bytes,uint64,uint64)[], (string,uint64,uint64,uint64,uint64,uint8,bytes)[])
func (_CacheBridge *CacheBridgeTransactor) RelayAndMultiVerify(opts *bind.TransactOpts, _data []byte) (*types.Transaction, error) {
	return _CacheBridge.contract.Transact(opts, "relayAndMultiVerify", _data)
}

// RelayAndMultiVerify is a paid mutator transaction binding the contract method 0x9c90b177.
//
// Solidity: function relayAndMultiVerify(bytes _data) returns((string,uint64,bytes,uint64,uint64)[], (string,uint64,uint64,uint64,uint64,uint8,bytes)[])
func (_CacheBridge *CacheBridgeSession) RelayAndMultiVerify(_data []byte) (*types.Transaction, error) {
	return _CacheBridge.Contract.RelayAndMultiVerify(&_CacheBridge.TransactOpts, _data)
}

// RelayAndMultiVerify is a paid mutator transaction binding the contract method 0x9c90b177.
//
// Solidity: function relayAndMultiVerify(bytes _data) returns((string,uint64,bytes,uint64,uint64)[], (string,uint64,uint64,uint64,uint64,uint8,bytes)[])
func (_CacheBridge *CacheBridgeTransactorSession) RelayAndMultiVerify(_data []byte) (*types.Transaction, error) {
	return _CacheBridge.Contract.RelayAndMultiVerify(&_CacheBridge.TransactOpts, _data)
}

// RelayAndVerify is a paid mutator transaction binding the contract method 0xad373732.
//
// Solidity: function relayAndVerify(bytes _data) returns((string,uint64,bytes,uint64,uint64), (string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeTransactor) RelayAndVerify(opts *bind.TransactOpts, _data []byte) (*types.Transaction, error) {
	return _CacheBridge.contract.Transact(opts, "relayAndVerify", _data)
}

// RelayAndVerify is a paid mutator transaction binding the contract method 0xad373732.
//
// Solidity: function relayAndVerify(bytes _data) returns((string,uint64,bytes,uint64,uint64), (string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeSession) RelayAndVerify(_data []byte) (*types.Transaction, error) {
	return _CacheBridge.Contract.RelayAndVerify(&_CacheBridge.TransactOpts, _data)
}

// RelayAndVerify is a paid mutator transaction binding the contract method 0xad373732.
//
// Solidity: function relayAndVerify(bytes _data) returns((string,uint64,bytes,uint64,uint64), (string,uint64,uint64,uint64,uint64,uint8,bytes))
func (_CacheBridge *CacheBridgeTransactorSession) RelayAndVerify(_data []byte) (*types.Transaction, error) {
	return _CacheBridge.Contract.RelayAndVerify(&_CacheBridge.TransactOpts, _data)
}

// RelayMulti is a paid mutator transaction binding the contract method 0x766e4e21.
//
// Solidity: function relayMulti(bytes _data) returns()
func (_CacheBridge *CacheBridgeTransactor) RelayMulti(opts *bind.TransactOpts, _data []byte) (*types.Transaction, error) {
	return _CacheBridge.contract.Transact(opts, "relayMulti", _data)
}

// RelayMulti is a paid mutator transaction binding the contract method 0x766e4e21.
//
// Solidity: function relayMulti(bytes _data) returns()
func (_CacheBridge *CacheBridgeSession) RelayMulti(_data []byte) (*types.Transaction, error) {
	return _CacheBridge.Contract.RelayMulti(&_CacheBridge.TransactOpts, _data)
}

// RelayMulti is a paid mutator transaction binding the contract method 0x766e4e21.
//
// Solidity: function relayMulti(bytes _data) returns()
func (_CacheBridge *CacheBridgeTransactorSession) RelayMulti(_data []byte) (*types.Transaction, error) {
	return _CacheBridge.Contract.RelayMulti(&_CacheBridge.TransactOpts, _data)
}

// RelayOracleState is a paid mutator transaction binding the contract method 0x5d9cfa20.
//
// Solidity: function relayOracleState(uint256 _blockHeight, (bytes32,bytes32,bytes32,bytes32,bytes32) _multiStore, (bytes32,bytes32,bytes32,bytes32,bytes32,bytes32) _merkleParts, (bytes32,bytes32,uint8,bytes,bytes)[] _signatures) returns()
func (_CacheBridge *CacheBridgeTransactor) RelayOracleState(opts *bind.TransactOpts, _blockHeight *big.Int, _multiStore MultiStoreData, _merkleParts BlockHeaderMerklePartsData, _signatures []TMSignatureData) (*types.Transaction, error) {
	return _CacheBridge.contract.Transact(opts, "relayOracleState", _blockHeight, _multiStore, _merkleParts, _signatures)
}

// RelayOracleState is a paid mutator transaction binding the contract method 0x5d9cfa20.
//
// Solidity: function relayOracleState(uint256 _blockHeight, (bytes32,bytes32,bytes32,bytes32,bytes32) _multiStore, (bytes32,bytes32,bytes32,bytes32,bytes32,bytes32) _merkleParts, (bytes32,bytes32,uint8,bytes,bytes)[] _signatures) returns()
func (_CacheBridge *CacheBridgeSession) RelayOracleState(_blockHeight *big.Int, _multiStore MultiStoreData, _merkleParts BlockHeaderMerklePartsData, _signatures []TMSignatureData) (*types.Transaction, error) {
	return _CacheBridge.Contract.RelayOracleState(&_CacheBridge.TransactOpts, _blockHeight, _multiStore, _merkleParts, _signatures)
}

// RelayOracleState is a paid mutator transaction binding the contract method 0x5d9cfa20.
//
// Solidity: function relayOracleState(uint256 _blockHeight, (bytes32,bytes32,bytes32,bytes32,bytes32) _multiStore, (bytes32,bytes32,bytes32,bytes32,bytes32,bytes32) _merkleParts, (bytes32,bytes32,uint8,bytes,bytes)[] _signatures) returns()
func (_CacheBridge *CacheBridgeTransactorSession) RelayOracleState(_blockHeight *big.Int, _multiStore MultiStoreData, _merkleParts BlockHeaderMerklePartsData, _signatures []TMSignatureData) (*types.Transaction, error) {
	return _CacheBridge.Contract.RelayOracleState(&_CacheBridge.TransactOpts, _blockHeight, _multiStore, _merkleParts, _signatures)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_CacheBridge *CacheBridgeTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CacheBridge.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_CacheBridge *CacheBridgeSession) RenounceOwnership() (*types.Transaction, error) {
	return _CacheBridge.Contract.RenounceOwnership(&_CacheBridge.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_CacheBridge *CacheBridgeTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _CacheBridge.Contract.RenounceOwnership(&_CacheBridge.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_CacheBridge *CacheBridgeTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _CacheBridge.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_CacheBridge *CacheBridgeSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _CacheBridge.Contract.TransferOwnership(&_CacheBridge.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_CacheBridge *CacheBridgeTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _CacheBridge.Contract.TransferOwnership(&_CacheBridge.TransactOpts, newOwner)
}

// UpdateValidatorPowers is a paid mutator transaction binding the contract method 0x91a68723.
//
// Solidity: function updateValidatorPowers((address,uint256)[] _validators) returns()
func (_CacheBridge *CacheBridgeTransactor) UpdateValidatorPowers(opts *bind.TransactOpts, _validators []BridgeValidatorWithPower) (*types.Transaction, error) {
	return _CacheBridge.contract.Transact(opts, "updateValidatorPowers", _validators)
}

// UpdateValidatorPowers is a paid mutator transaction binding the contract method 0x91a68723.
//
// Solidity: function updateValidatorPowers((address,uint256)[] _validators) returns()
func (_CacheBridge *CacheBridgeSession) UpdateValidatorPowers(_validators []BridgeValidatorWithPower) (*types.Transaction, error) {
	return _CacheBridge.Contract.UpdateValidatorPowers(&_CacheBridge.TransactOpts, _validators)
}

// UpdateValidatorPowers is a paid mutator transaction binding the contract method 0x91a68723.
//
// Solidity: function updateValidatorPowers((address,uint256)[] _validators) returns()
func (_CacheBridge *CacheBridgeTransactorSession) UpdateValidatorPowers(_validators []BridgeValidatorWithPower) (*types.Transaction, error) {
	return _CacheBridge.Contract.UpdateValidatorPowers(&_CacheBridge.TransactOpts, _validators)
}

// CacheBridgeOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the CacheBridge contract.
type CacheBridgeOwnershipTransferredIterator struct {
	Event *CacheBridgeOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CacheBridgeOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CacheBridgeOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CacheBridgeOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CacheBridgeOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CacheBridgeOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CacheBridgeOwnershipTransferred represents a OwnershipTransferred event raised by the CacheBridge contract.
type CacheBridgeOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_CacheBridge *CacheBridgeFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*CacheBridgeOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _CacheBridge.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &CacheBridgeOwnershipTransferredIterator{contract: _CacheBridge.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_CacheBridge *CacheBridgeFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *CacheBridgeOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _CacheBridge.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CacheBridgeOwnershipTransferred)
				if err := _CacheBridge.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_CacheBridge *CacheBridgeFilterer) ParseOwnershipTransferred(log types.Log) (*CacheBridgeOwnershipTransferred, error) {
	event := new(CacheBridgeOwnershipTransferred)
	if err := _CacheBridge.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
